/*
 * (c) Copyright 2005-2011 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend:src/main/java/project/hibernate/DAOHibernate.e.vm.java
 */
package com.bizintelapps.zytoon.dao;

import java.util.ArrayList;
import java.util.List;
import org.hibernate.criterion.Criterion;
import org.springframework.stereotype.Repository;
import com.bizintelapps.zytoon.dao.hibernate.HibernateUtil;
import com.bizintelapps.zytoon.dao.support.SearchTemplate;

import com.bizintelapps.zytoon.dao.hibernate.HibernateGenericDao;
import com.bizintelapps.zytoon.domain.Book;

/**
 * Hibernate implementation of the Users DAO interface.
 */
@Repository
public class BookDaoImpl extends HibernateGenericDao<Book, Integer> implements BookDao {

    public BookDaoImpl() {
        super(Book.class);
    }

    /**
     * Add criterion so the primary key is 
     * included in a search by example.
     */
    @Override
    protected List<Criterion> getByExampleExtraCriterions(Book model, SearchTemplate searchTemplate) {
        List<Criterion> criterions = new ArrayList<Criterion>();

        // handle pk fields
//        if (model.isPrimaryKeySet()) {
//            criterions.add(HibernateUtil.constructPatternCriterion("title", model.getPrimaryKey(), searchTemplate));
//        }
        return criterions;
    }

    @Override
    public List<Book> findBooks(int startPosition, int maxResults) {
        return this.getEntityManager().createNamedQuery("Book.findLatest", Book.class)
                .setFirstResult(startPosition)
                .setMaxResults(maxResults)
                
                .getResultList();
    }

    @Override
    public Book findByUrl(String url) {
        Book book = null;
        try {
            book = this.getEntityManager().createNamedQuery("Book.findByUrl", Book.class).setParameter("url", url).getSingleResult();
        } catch (RuntimeException re) {
        }

        return book;
    }
}