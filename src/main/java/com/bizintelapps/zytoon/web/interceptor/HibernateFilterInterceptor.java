/*
 * (c) Copyright 2005-2011 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-mvc-3:src/main/java/web/interceptor/HibernateFilterInterceptor.p.vm.java
 */
package com.bizintelapps.zytoon.web.interceptor;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.HandlerInterceptor;

import com.bizintelapps.zytoon.dao.hibernate.HibernateFilterContext;

/**
 * This {@link HandlerInterceptor} is responsible for setting Hibernate filters on the current JPA session.
 * @see http://docs.jboss.org/hibernate/core/3.3/reference/en/html/filters.html
 */
@Service
public class HibernateFilterInterceptor implements HandlerInterceptor {

    @Autowired
    private HibernateFilterContext hibernateFilterContext;

    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)
            throws ServletException {
        // set up hibernate filter to the current hibernate session,
        // bound to the current thread
        hibernateFilterContext.enableFilters();

        // proceed
        return true;
    }

    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,
            ModelAndView modelAndView) {
    }

    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)
            throws Exception {
        hibernateFilterContext.disableFilters();
    }
}