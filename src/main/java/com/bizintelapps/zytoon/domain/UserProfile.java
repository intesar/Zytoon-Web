/*
 * (c) Copyright 2005-2011 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend:src/main/java/project/domain/Entity.e.vm.java
 */
package com.bizintelapps.zytoon.domain;

import java.util.Locale;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import static org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE;
import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlTransient;
import org.apache.log4j.Logger;
import org.hibernate.annotations.Cache;
import org.hibernate.validator.constraints.Length;
import com.bizintelapps.zytoon.validation.JpaUnique;
import java.util.Date;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Temporal;
import org.hibernate.envers.Audited;
import org.springframework.format.annotation.DateTimeFormat;
import static javax.persistence.TemporalType.DATE;
import static com.bizintelapps.zytoon.util.ResourcesUtil.DATE_FORMAT_PATTERN;

@Entity
@Table(name = "user_profile")
@Audited
@Cache(usage = NONSTRICT_READ_WRITE)
@JpaUnique
@NamedQueries(
@NamedQuery(name = "UserProfile.findByUsername", query = "SELECT u FROM UserProfile u WHERE u.username = :username"))
public class UserProfile implements Identifiable<Integer>, Serializable, Copyable<UserProfile> {

    private static final long serialVersionUID = 1L;
    private static final Logger logger = Logger.getLogger(UserProfile.class);
    // Raw attributes
    private Integer id; // pk
    private String city;
    private String zipcode;
    private String country;
    private String title;
    private String firstName;
    private String lastName;
    private String username;
    private String gender;
    private Date dob;
    private Integer points = 1;
    private String name;
    private String middleInitial;
    private Integer timezone;
    private Locale locale;
    private String fbLink;
    private String fbId;
    private boolean notifyReportDue = true;

    // ---------------------------
    // Constructors
    // ---------------------------
    public UserProfile() {
    }

    public UserProfile(Integer primaryKey) {
        this();
        setPrimaryKey(primaryKey);
    }

    // ---------------------------
    // Identifiable implementation
    // ---------------------------
    @Transient
    @XmlTransient
    @Override
    public Integer getPrimaryKey() {
        return getId();
    }

    @Override
    public void setPrimaryKey(Integer id) {
        setId(id);
    }

    @Transient
    @XmlTransient
    @Override
    public boolean isPrimaryKeySet() {
        return isIdSet();
    }

    public void setFormatedDob(String formatedDob) {
    }

    @Transient
    public String getFormatedDob() {
        if (dob != null) {
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            return df.format(dob);
        } else {
            return "";
        }
    }

    // -------------------------------
    // Getter & Setter
    // -------------------------------
    // -- [id] ------------------------
    @Column(nullable = false, unique = true, precision = 10)
    @GeneratedValue
    @Id
    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Transient
    public boolean isIdSet() {
        return id != null;
    }

    // -- [city] ------------------------
    @Length(max = 80)
    @Column(length = 80)
    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    // -- [zipcode] ------------------------
    @Length(max = 15)
    @Column(length = 15)
    public String getZipcode() {
        return zipcode;
    }

    public void setZipcode(String zipcode) {
        this.zipcode = zipcode;
    }

    // -- [country] ------------------------
    @Length(max = 80)
    @Column(length = 80)
    public String getCountry() {
        return country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    // -- [title] ------------------------
    @Length(max = 150)
    @Column(length = 150)
    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    // -- [firstName] ------------------------
    @Length(max = 45)
    @Column(name = "first_name", length = 45)
    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    // -- [lastName] ------------------------
    @Length(max = 45)
    @Column(name = "last_name", length = 45)
    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    // -- [lastName] ------------------------
    @Length(max = 45)
    @Column(name = "username", length = 45)
    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    // -- [gender] ------------------------
    @Column(name = "gender", length = 6)
    public String getGender() {
        return gender;
    }

    public void setGender(String gender) {
        this.gender = gender;
    }

    // -- [dob] ------------------------
    @Column(name = "dob", length = 10)
    @Temporal(DATE)
    @DateTimeFormat(pattern = DATE_FORMAT_PATTERN)
    public Date getDob() {
        return dob;
    }

    public void setDob(Date dob) {
        this.dob = dob;
    }

    @Column(name = "points", columnDefinition = "INT(4) default '1'")
    public Integer getPoints() {
        return points;
    }

    public void setPoints(Integer points) {
        this.points = points;
    }

    public String getFbLink() {
        return fbLink;
    }

    public void setFbLink(String fbLink) {
        this.fbLink = fbLink;
    }

    public Locale getLocale() {
        return locale;
    }

    public void setLocale(Locale locale) {
        this.locale = locale;
    }

    public String getMiddleInitial() {
        return middleInitial;
    }

    public void setMiddleInitial(String middleInitial) {
        this.middleInitial = middleInitial;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getTimezone() {
        return timezone;
    }

    public void setTimezone(Integer timezone) {
        this.timezone = timezone;
    }

    public String getFbId() {
        return fbId;
    }

    public void setFbId(String fbId) {
        this.fbId = fbId;
    }

    @Column(name = "notify_report_due")
    public boolean isNotifyReportDue() {
        return notifyReportDue;
    }

    public void setNotifyReportDue(boolean notifyReportDue) {
        this.notifyReportDue = notifyReportDue;
    }

    // -----------------------------------------
    // Set defaults values
    // -----------------------------------------
    /**
     * Set the default values.
     */
    public void initDefaultValues() {
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final UserProfile other = (UserProfile) obj;
        if (this.id != other.id && (this.id == null || !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 59 * hash + (this.id != null ? this.id.hashCode() : 0);
        return hash;
    }

    // -----------------------------------------
    // toString
    // -----------------------------------------
    /**
     * Construct a readable string representation for this UserProfile instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        StringBuilder result = new StringBuilder();
        result.append("userProfile.id=[").append(getId()).append("]\n");
        result.append("userProfile.city=[").append(getCity()).append("]\n");
        result.append("userProfile.country=[").append(getCountry()).append("]\n");
        result.append("userProfile.title=[").append(getTitle()).append("]\n");
        result.append("userProfile.firstName=[").append(getFirstName()).append("]\n");
        result.append("userProfile.lastName=[").append(getLastName()).append("]\n");
        result.append("userProfile.gender=[").append(getGender()).append("]\n");
        return result.toString();
    }

    // -----------------------------------------
    // Copyable Implementation
    // (Support for REST web layer)
    // -----------------------------------------
    /**
     * Return a copy of the current object
     */
    @Override
    public UserProfile copy() {
        UserProfile userProfile = new UserProfile();
        copyTo(userProfile);
        return userProfile;
    }

    /**
     * Copy the current properties to the given object
     */
    @Override
    public void copyTo(UserProfile userProfile) {
        userProfile.setId(getId());
        userProfile.setCity(getCity());
        userProfile.setZipcode(getZipcode());
        userProfile.setCountry(getCountry());
        userProfile.setTitle(getTitle());
        userProfile.setName(getName());
        userProfile.setFirstName(getFirstName());
        userProfile.setLastName(getLastName());
        userProfile.setUsername(getUsername());
        userProfile.setGender(getGender());
        userProfile.setPoints(getPoints());
        userProfile.setNotifyReportDue(isNotifyReportDue());
    }
}