/*
 * (c) Copyright 2005-2011 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend:src/main/java/project/domain/Entity.e.vm.java
 */
package com.bizintelapps.zytoon.domain;

import static org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE;
import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;
import javax.xml.bind.annotation.XmlTransient;
import org.apache.log4j.Logger;
import org.hibernate.annotations.Cache;
import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotEmpty;
import com.bizintelapps.zytoon.validation.JpaUnique;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import org.hibernate.envers.Audited;

@Entity
@Table(name = "program_structure")
@Audited
@Cache(usage = NONSTRICT_READ_WRITE)
@JpaUnique
@NamedQueries({
    @NamedQuery(name = "ProgramStructure.ProgramStructureByDayOfWeekAndMonth",
    query = "SELECT p FROM ProgramStructure p WHERE p.dayOfWeek1 = :dayOfWeek OR p.dayOfWeek2 = :dayOfWeek OR p.dayOfMonth1 = :dayOfMonth OR p.dayOfMonth2 = :dayOfMonth"),
    @NamedQuery(name = "ProgramStructure.findAll", query = "SELECT p FROM ProgramStructure p WHERE p.active = true ")
})
public class ProgramStructure implements Identifiable<Integer>, Serializable, Copyable<ProgramStructure> {

    private static final long serialVersionUID = 1L;
    private static final Logger logger = Logger.getLogger(ProgramStructure.class);
    // Raw attributes
    private Integer id; // pk
    private String name; // not null
    private Integer days; // not null
    private String description; // not null
    private Integer prerequisites;
    private String category; // Salah, Adap, Quran, Books
    private Integer categoryId;
    // day of week
    private Integer dayOfWeek1;
    private Integer dayOfWeek2;
    // day of month
    private Integer dayOfMonth1;
    private Integer dayOfMonth2;
    private Boolean active = Boolean.TRUE;

    // ---------------------------
    // Constructors
    // ---------------------------
    public ProgramStructure() {
    }

    public ProgramStructure(Integer primaryKey) {
        this();
        setPrimaryKey(primaryKey);
    }

    // ---------------------------
    // Identifiable implementation
    // ---------------------------
    @Transient
    @XmlTransient
    @Override
    public Integer getPrimaryKey() {
        return getId();
    }

    @Override
    public void setPrimaryKey(Integer id) {
        setId(id);
    }

    @Transient
    @XmlTransient
    @Override
    public boolean isPrimaryKeySet() {
        return isIdSet();
    }

    // -------------------------------
    // Getter & Setter
    // -------------------------------
    // -- [id] ------------------------
    @Column(nullable = false, unique = true, precision = 10)
    @GeneratedValue
    @Id
    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Transient
    public boolean isIdSet() {
        return id != null;
    }

    // -- [name] ------------------------
    @NotEmpty
    @Length(max = 50)
    @Column(nullable = false, length = 50)
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    // -- [days] ------------------------
    @NotNull
    @Column(nullable = false, precision = 10)
    public Integer getDays() {
        return days;
    }

    public void setDays(Integer days) {
        this.days = days;
    }

    // -- [description] ------------------------
    @NotEmpty
    @Length(max = 2000)
    @Column(nullable = false, length = 200)
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    // -- [prerequisites] ------------------------
    @Column(precision = 10)
    public Integer getPrerequisites() {
        return prerequisites;
    }

    public void setPrerequisites(Integer prerequisites) {
        this.prerequisites = prerequisites;
    }

    // -- [category] ------------------------
    @NotEmpty
    @Length(max = 200)
    @Column(nullable = false, length = 200)
    public String getCategory() {
        return category;
    }

    public void setCategory(String category) {
        this.category = category;
    }

    public Integer getCategoryId() {
        return categoryId;
    }

    public void setCategoryId(Integer categoryId) {
        this.categoryId = categoryId;
    }

    @NotNull
    @Column(name = "day_of_month1")
    public Integer getDayOfMonth1() {
        return dayOfMonth1;
    }

    public void setDayOfMonth1(Integer dayOfMonth1) {
        this.dayOfMonth1 = dayOfMonth1;
    }

    @NotNull
    @Column(name = "day_of_month2")
    public Integer getDayOfMonth2() {
        return dayOfMonth2;
    }

    public void setDayOfMonth2(Integer dayOfMonth2) {
        this.dayOfMonth2 = dayOfMonth2;
    }

    @Column(name = "day_of_week1")
    public Integer getDayOfWeek1() {
        return dayOfWeek1;
    }

    public void setDayOfWeek1(Integer dayOfWeek1) {
        this.dayOfWeek1 = dayOfWeek1;
    }

    @Column(name = "day_of_week2")
    public Integer getDayOfWeek2() {
        return dayOfWeek2;
    }

    public void setDayOfWeek2(Integer dayOfWeek2) {
        this.dayOfWeek2 = dayOfWeek2;
    }

    @Column(name = "active")
    public Boolean getActive() {
        return active;
    }

    public void setActive(Boolean active) {
        this.active = active;
    }

    // -----------------------------------------
    // Set defaults values
    // -----------------------------------------
    /**
     * Set the default values.
     */
    public void initDefaultValues() {
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final ProgramStructure other = (ProgramStructure) obj;
        if (this.id != other.id && (this.id == null || !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 23 * hash + (this.id != null ? this.id.hashCode() : 0);
        return hash;
    }

    // -----------------------------------------
    // toString
    // -----------------------------------------
    /**
     * Construct a readable string representation for this ProgramStructure instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        StringBuilder result = new StringBuilder();
        result.append("programStructure.id=[").append(getId()).append("]\n");
        result.append("programStructure.name=[").append(getName()).append("]\n");
        result.append("programStructure.days=[").append(getDays()).append("]\n");
        result.append("programStructure.description=[").append(getDescription()).append("]\n");
        result.append("programStructure.prerequisites=[").append(getPrerequisites()).append("]\n");
        result.append("programStructure.category=[").append(getCategory()).append("]\n");
        return result.toString();
    }

    // -----------------------------------------
    // Copyable Implementation
    // (Support for REST web layer)
    // -----------------------------------------
    /**
     * Return a copy of the current object
     */
    @Override
    public ProgramStructure copy() {
        ProgramStructure programStructure = new ProgramStructure();
        copyTo(programStructure);
        return programStructure;
    }

    /**
     * Copy the current properties to the given object
     */
    @Override
    public void copyTo(ProgramStructure programStructure) {
        programStructure.setId(getId());
        programStructure.setName(getName());
        programStructure.setDays(getDays());
        programStructure.setDescription(getDescription());
        programStructure.setPrerequisites(getPrerequisites());
        programStructure.setCategory(getCategory());
    }
}