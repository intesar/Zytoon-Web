/*
 * (c) Copyright 2005-2011 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend:src/main/java/project/domain/Entity.e.vm.java
 */
package com.bizintelapps.zytoon.domain;

import static javax.persistence.CascadeType.PERSIST;
import static javax.persistence.FetchType.LAZY;
import static javax.persistence.TemporalType.DATE;
import static org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE;
import static com.bizintelapps.zytoon.util.ResourcesUtil.DATE_FORMAT_PATTERN;
import java.io.Serializable;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;
import javax.xml.bind.annotation.XmlTransient;
import org.apache.log4j.Logger;
import org.hibernate.annotations.Cache;
import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotEmpty;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.format.annotation.DateTimeFormat.ISO;
import com.bizintelapps.zytoon.domain.ProgramStructure;
import com.bizintelapps.zytoon.domain.UserProfile;
import com.bizintelapps.zytoon.validation.JpaUnique;
import org.hibernate.envers.Audited;

@Entity
@Table(name = "user_graduation")
@Audited
@Cache(usage = NONSTRICT_READ_WRITE)
@JpaUnique
public class UserGraduation implements Identifiable<Integer>, Serializable, Copyable<UserGraduation> {
    private static final long serialVersionUID = 1L;
    private static final Logger logger = Logger.getLogger(UserGraduation.class);

    // Raw attributes
    private Integer id; // pk
    private Date graduationDate; // not null
    private String title; // not null

    // Technical attributes for query by example
    private Integer programStructureId; // not null
    private Integer userId; // not null

    // Many to one
    private UserProfile user; // not null (userId)
    private ProgramStructure programStructure; // not null (programStructureId)

    // ---------------------------
    // Constructors
    // ---------------------------

    public UserGraduation() {
    }

    public UserGraduation(Integer primaryKey) {
        this();
        setPrimaryKey(primaryKey);
    }

    // ---------------------------
    // Identifiable implementation
    // ---------------------------

    @Transient
    @XmlTransient
    public Integer getPrimaryKey() {
        return getId();
    }

    public void setPrimaryKey(Integer id) {
        setId(id);
    }

    @Transient
    @XmlTransient
    public boolean isPrimaryKeySet() {
        return isIdSet();
    }

    // -------------------------------
    // Getter & Setter
    // -------------------------------

    // -- [id] ------------------------

    @Column(nullable = false, unique = true, precision = 10)
    @GeneratedValue
    @Id
    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Transient
    public boolean isIdSet() {
        return id != null;
    }

    // -- [programStructureId] ------------------------

    @Column(name = "program_structure_id", nullable = false, precision = 10, insertable = false, updatable = false)
    public Integer getProgramStructureId() {
        return programStructureId;
    }

    private void setProgramStructureId(Integer programStructureId) {
        this.programStructureId = programStructureId;
    }

    // -- [graduationDate] ------------------------

    @NotNull
    @Column(name = "graduation_date", nullable = false, length = 10)
    @Temporal(DATE)
    @DateTimeFormat(pattern = DATE_FORMAT_PATTERN)
    public Date getGraduationDate() {
        return graduationDate;
    }

    public void setGraduationDate(Date graduationDate) {
        this.graduationDate = graduationDate;
    }

    // -- [title] ------------------------

    @NotEmpty
    @Length(max = 150)
    @Column(nullable = false, length = 150)
    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    // -- [userId] ------------------------

    @Column(name = "user_id", nullable = false, precision = 10, insertable = false, updatable = false)
    public Integer getUserId() {
        return userId;
    }

    private void setUserId(Integer userId) {
        this.userId = userId;
    }

    // --------------------------------------------------------------------
    // Many to One support
    // --------------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: UserGraduation.userId ==> UserProfile.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @NotNull
    @Cache(usage = NONSTRICT_READ_WRITE)
    @JoinColumn(name = "user_id", nullable = false)
    @ManyToOne(cascade = PERSIST, fetch = LAZY)
    public UserProfile getUser() {
        return user;
    }

    /**
     * Set the user without adding this UserGraduation instance on the passed user
     * If you want to preserve referential integrity we recommend to use
     * instead the corresponding adder method provided by UserProfile
     */
    public void setUser(UserProfile user) {
        this.user = user;

        // We set the foreign key property so it can be used by Hibernate search by Example facility.
        if (user != null) {
            setUserId(user.getId());
        } else {
            setUserId(null);
        }
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: UserGraduation.programStructureId ==> ProgramStructure.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @NotNull
    @Cache(usage = NONSTRICT_READ_WRITE)
    @JoinColumn(name = "program_structure_id", nullable = false)
    @ManyToOne(cascade = PERSIST, fetch = LAZY)
    public ProgramStructure getProgramStructure() {
        return programStructure;
    }

    /**
     * Set the programStructure without adding this UserGraduation instance on the passed programStructure
     * If you want to preserve referential integrity we recommend to use
     * instead the corresponding adder method provided by ProgramStructure
     */
    public void setProgramStructure(ProgramStructure programStructure) {
        this.programStructure = programStructure;

        // We set the foreign key property so it can be used by Hibernate search by Example facility.
        if (programStructure != null) {
            setProgramStructureId(programStructure.getId());
        } else {
            setProgramStructureId(null);
        }
    }

    // -----------------------------------------
    // Set defaults values
    // -----------------------------------------

    /**
     * Set the default values.
     */
    public void initDefaultValues() {
    }

    // -----------------------------------------
    // equals and hashCode
    // -----------------------------------------

    // The first time equals or hashCode is called,
    // we check if the primary key is present or not.
    // If yes: we use it in equals/hashCode
    // If no: we use a VMID during the entire life of this
    // instance even if later on this instance is assigned
    // a primary key.

    @Override
    public boolean equals(Object userGraduation) {
        if (this == userGraduation) {
            return true;
        }

        if (!(userGraduation instanceof UserGraduation)) {
            return false;
        }

        UserGraduation other = (UserGraduation) userGraduation;
        return _getUid().equals(other._getUid());
    }

    @Override
    public int hashCode() {
        return _getUid().hashCode();
    }

    private Object _uid;

    private Object _getUid() {
        if (_uid == null) {
            if (isPrimaryKeySet()) {
                _uid = getPrimaryKey();
            } else {
                _uid = new java.rmi.dgc.VMID();
                logger
                        .warn("DEVELOPER: hashCode has changed!."
                                + "If you encounter this message you should take the time to carefuly review equals/hashCode for: "
                                + getClass().getCanonicalName());
            }
        }
        return _uid;
    }

    // -----------------------------------------
    // toString
    // -----------------------------------------

    /**
     * Construct a readable string representation for this UserGraduation instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        StringBuilder result = new StringBuilder();
        result.append("userGraduation.id=[").append(getId()).append("]\n");
        result.append("userGraduation.programStructureId=[").append(getProgramStructureId()).append("]\n");
        result.append("userGraduation.graduationDate=[").append(getGraduationDate()).append("]\n");
        result.append("userGraduation.title=[").append(getTitle()).append("]\n");
        result.append("userGraduation.userId=[").append(getUserId()).append("]\n");
        return result.toString();
    }

    // -----------------------------------------
    // Copyable Implementation
    // (Support for REST web layer)
    // -----------------------------------------

    /**
     * Return a copy of the current object
     */
    @Override
    public UserGraduation copy() {
        UserGraduation userGraduation = new UserGraduation();
        copyTo(userGraduation);
        return userGraduation;
    }

    /**
     * Copy the current properties to the given object
     */
    @Override
    public void copyTo(UserGraduation userGraduation) {
        userGraduation.setId(getId());
        //userGraduation.setProgramStructureId(getProgramStructureId());
        userGraduation.setGraduationDate(getGraduationDate());
        userGraduation.setTitle(getTitle());
        //userGraduation.setUserId(getUserId());
        if (getUser() != null) {
            userGraduation.setUser(new UserProfile(getUser().getPrimaryKey()));
        }
        if (getProgramStructure() != null) {
            userGraduation.setProgramStructure(new ProgramStructure(getProgramStructure().getPrimaryKey()));
        }
    }
}