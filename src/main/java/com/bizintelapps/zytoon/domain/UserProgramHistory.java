/*
 * (c) Copyright 2005-2011 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend:src/main/java/project/domain/Entity.e.vm.java
 */
package com.bizintelapps.zytoon.domain;

import org.hibernate.envers.Audited;
import java.text.SimpleDateFormat;
import java.text.DateFormat;
import javax.persistence.NamedQuery;
import javax.persistence.NamedQueries;
import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlTransient;
import org.apache.log4j.Logger;
import com.bizintelapps.zytoon.validation.JpaUnique;
import java.util.Date;
import javax.persistence.GeneratedValue;
import javax.persistence.Temporal;
import org.springframework.format.annotation.DateTimeFormat;
import static javax.persistence.TemporalType.DATE;
import static com.bizintelapps.zytoon.util.ResourcesUtil.DATE_FORMAT_PATTERN;

@Entity
@Audited
@Table(name = "user_program_history")
@JpaUnique
@NamedQueries({
    @NamedQuery(name = "UserProgramHistory.findByProgramStructure", 
        query = "SELECT u FROM UserProgramHistory u WHERE u.programStructureId = :programStructureId AND u.userId = :userId"),
    @NamedQuery(name = "UserProgramHistory.findByProgramStructureIds", 
        query = "SELECT u FROM UserProgramHistory u WHERE u.programStructureId IN (:programStructureIds) AND u.userId = :userId")
})
public class UserProgramHistory implements Identifiable<Integer>, Serializable {

    private static final long serialVersionUID = 1L;
    private static final Logger logger = Logger.getLogger(UserProgramHistory.class);
    // Raw attributes
    private Integer id; // pk
    // Technical attributes for query by example
    private Integer programStructureId;
    private Integer userId;
    private Integer times;
    private Boolean current;
    private Date lastStartDate;
    private Date lastEndDate;
    private Integer averageScore;

    // ---------------------------
    // Constructors
    // ---------------------------
    public UserProgramHistory() {
    }

    public UserProgramHistory(Integer times, Boolean current, Integer averageScore) {
        this.times = times;
        this.current = current;
        this.averageScore = averageScore;
    }

    public UserProgramHistory(Integer programStructureId, Integer userId, Integer times, Boolean current, Date lastStartDate, Date lastEndDate) {
        this.programStructureId = programStructureId;
        this.userId = userId;
        this.times = times;
        this.current = current;
        this.lastStartDate = lastStartDate;
        this.lastEndDate = lastEndDate;
    }

    public UserProgramHistory(Integer primaryKey) {
        this();
        setPrimaryKey(primaryKey);
    }

    // ---------------------------
    // Identifiable implementation
    // ---------------------------
    @Transient
    @XmlTransient
    @Override
    public Integer getPrimaryKey() {
        return getId();
    }

    @Override
    public void setPrimaryKey(Integer id) {
        setId(id);
    }

    @Transient
    @XmlTransient
    @Override
    public boolean isPrimaryKeySet() {
        return isIdSet();
    }

    // -------------------------------
    // Getter & Setter
    // -------------------------------
    @Column(nullable = false, unique = true, precision = 10)
    @GeneratedValue
    @Id
    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Transient
    public boolean isIdSet() {
        return id != null;
    }

    @Column(name = "last_start_date", length = 10)
    @Temporal(DATE)
    @DateTimeFormat(pattern = DATE_FORMAT_PATTERN)
    public Date getLastStartDate() {
        return lastStartDate;
    }

    public void setLastStartDate(Date lastStartDate) {
        this.lastStartDate = lastStartDate;
    }

    @Column(name = "last_end_date", length = 10)
    @Temporal(DATE)
    @DateTimeFormat(pattern = DATE_FORMAT_PATTERN)
    public Date getLastEndDate() {
        return lastEndDate;
    }

    public void setLastEndDate(Date lastEndDate) {
        this.lastEndDate = lastEndDate;
    }
    
    @Transient
    public String getStart() {
        String dt = "";
        if (lastStartDate != null) {
            String PATTERN = "EEE, MMM d";
            DateFormat df = new SimpleDateFormat(PATTERN);
            dt = df.format(lastStartDate);
        }
        return dt;
    }

    public void setStart(String dt) {
    }
    
    @Transient
    public String getEnd() {
        String dt = "";
        if (lastEndDate != null) {
            String PATTERN = "EEE, MMM d";
            DateFormat df = new SimpleDateFormat(PATTERN);
            dt = df.format(lastEndDate);
        }
        return dt;
    }

    public void setEnd(String dt) {
    }

    public Integer getAverageScore() {
        return averageScore;
    }

    public void setAverageScore(Integer averageScore) {
        this.averageScore = averageScore;
    }

    public Boolean getCurrent() {
        return current;
    }

    public void setCurrent(Boolean current) {
        this.current = current;
    }

    public Integer getProgramStructureId() {
        return programStructureId;
    }

    public void setProgramStructureId(Integer programStructureId) {
        this.programStructureId = programStructureId;
    }

    public Integer getTimes() {
        return times;
    }

    public void setTimes(Integer times) {
        this.times = times;
    }

    public Integer getUserId() {
        return userId;
    }

    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    // -----------------------------------------
    // Set defaults values
    // -----------------------------------------
    /**
     * Set the default values.
     */
    public void initDefaultValues() {
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final UserProgramHistory other = (UserProgramHistory) obj;
        if (this.id != other.id && (this.id == null || !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 67 * hash + (this.id != null ? this.id.hashCode() : 0);
        return hash;
    }

    @Override
    public String toString() {
        return "UserProgramHistory{" + "id=" + id + ", programStructureId=" + programStructureId + ", userId=" + userId + '}';
    }
}