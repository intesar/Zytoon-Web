/*
 * (c) Copyright 2005-2011 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-mvc-3:src/main/java/web/controller/login/LoginController.p.vm.java
 */
package com.bizintelapps.zytoon.web.controller.login;

import static org.springframework.security.web.WebAttributes.AUTHENTICATION_EXCEPTION;

import javax.servlet.http.HttpServletRequest;

import org.springframework.security.core.AuthenticationException;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;

/**
 * The login controller checks if any login error is present in the Spring Security context.
 * <p>
 * When an error is present, the LoginController rejects the value using the BindingResult facility. This way, the error message is available from the view as
 * any other error message. Bear in mind that this controller is invoked only to display the login page and in case of authentication failure.
 * <p>
 * The login phase itself is done by SpringSecurity.
 * <p>
 * Note: This controller name is forced only to minimize the risks of name collisions. It is not used since controllers sit on top of everything else.
 */
@Controller("loginControllerExample")
@RequestMapping("/login/")
public class LoginController {
    @RequestMapping( { "/index", "/" })
    public String index(@ModelAttribute LoginForm loginForm, BindingResult result, HttpServletRequest request) {
        AuthenticationException ae = (AuthenticationException) request.getSession().getAttribute(
                AUTHENTICATION_EXCEPTION);
        if (ae != null) {
            result.reject("login.unsuccessful");
        }
        return "/login/index";
    }
}