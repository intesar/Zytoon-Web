/*
 * (c) Copyright 2005-2011 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-mvc-3:src/main/java/web/util/ExceptionUtil.p.vm.java
 */
package com.bizintelapps.zytoon.web.util;

import java.lang.reflect.Constructor;

import org.apache.log4j.Logger;

/**
 * The purpose of this utility is to throw exceptions in order to check that proper {@link HandlerExceptionResolver} are configured. 
 */
public class ExceptionUtil {
    private Logger logger = Logger.getLogger(ExceptionUtil.class);

    /**
     * Convert the passed exception name into the corresponding exception instance and throw it.
     */
    @SuppressWarnings("unchecked")
    public void throwException(String exceptionName) throws Exception {

        Class<Exception> exceptionClass = (Class<Exception>) Class.forName(exceptionName);
        Constructor<Exception> exceptionConstructor = null;

        try {
            exceptionConstructor = exceptionClass.getConstructor(String.class);
        } catch (Exception e) {
            // ignore
        }

        if (exceptionConstructor != null) {
            throw exceptionConstructor.newInstance(exceptionArg);
        }

        try {
            exceptionConstructor = exceptionClass.getConstructor(String.class, String.class);
        } catch (Exception e) {
            // ignore
        }

        if (exceptionConstructor != null) {
            throw exceptionConstructor.newInstance(exceptionArg, exceptionArg);
        }

        try {
            exceptionConstructor = exceptionClass.getConstructor(String.class, Throwable.class);
        } catch (Exception e) {
            // ignore
        }

        if (exceptionConstructor != null) {
            throw exceptionConstructor.newInstance(exceptionArg, new Exception());
        }

        logger.warn("Could not instanciate the passed exception: " + exceptionName);
    }

    private String exceptionArg = "Sample exception thrown to check exception to view mapping";

    public void setExceptionArg(String exceptionArg) {
        this.exceptionArg = exceptionArg;
    }
}
